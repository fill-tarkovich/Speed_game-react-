{"version":3,"sources":["Circle.js","Button.js","Popup.js","App.js","index.js","sounds/bg.mp3","sounds/end.mp3"],"names":["Circle","props","react_default","a","createElement","style","pointerEvents","disabled","className","concat","active","onClick","click","Button","type","children","Popup","message","score","id","close","BGsound","Audio","bgSound","ENDsound","endSound","App","state","pace","showPopup","rounds","gameOn","timer","undefined","circles","isActive","clickedCircle","i","_this","setState","stopGame","closeHandler","window","location","reload","nextCircle","nextActive","getRndInteger","length","console","log","setTimeout","startGame","play","clearTimeout","pause","min","max","Math","floor","random","_this2","this","map","circle","src_Circle","key","src_Button","src_Popup","Component","container","document","getElementById","ReactDOMClient","createRoot","render","src_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.dd3e8f97.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Circle = (props) => {\n  return (\n    <div\n      style={{ pointerEvents: props.disabled ? \"auto\" : \"none\" }}\n      className={`circle ${props.active ? \"active\" : \"\"}`}\n      onClick={props.click}\n    >\n      ðŸ”˜\n    </div>\n  );\n};\n\nexport default Circle;\n","import React from \"react\";\n\nconst Button = (props) => {\n  return (\n    <button type={props.type || \"button\"} onClick={props.click}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nconst Popup = (props) => {\n  let message = \"\";\n\n  if (props.score <= 50) {\n    message = \"You can do better!\";\n  } else if (props.score > 50 && props.score <= 100) {\n    message = \"Not bad!\";\n  } else {\n    message = \"Great!\";\n  }\n  return (\n    <div id=\"overlay\">\n      <div className=\"modal\">\n        <p>Ups, game over!</p>\n        <p id=\"result\">Score is: {props.score}</p>\n        <p>{message}</p>\n        <button type=\"button\" id=\"close\" onClick={props.close}>\n          Close\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n","import React from \"react\";\nimport { Component } from \"react\";\nimport Circle from \"./Circle\";\nimport Button from \"./Button\";\nimport Popup from \"./Popup\";\n\nimport bgSound from \"./sounds/bg.mp3\";\nimport endSound from \"./sounds/end.mp3\";\n\nconst BGsound = new Audio(bgSound);\nconst ENDsound = new Audio(endSound);\n\nclass App extends Component {\n  state = {\n    score: 0,\n    pace: 1200,\n    active: -1,\n    showPopup: false,\n    rounds: 0,\n    gameOn: false,\n  };\n\n  timer = undefined;\n\n  circles = [\n    { id: 1, isActive: false },\n    { id: 2, isActive: false },\n    { id: 3, isActive: false },\n    { id: 4, isActive: false },\n  ];\n\n  getRndInteger(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  clickedCircle = (i) => {\n    if (this.state.active !== i) {\n      this.stopGame();\n      return;\n    }\n    this.setState({\n      score: this.state.score + 10,\n      rounds: this.state.rounds - 1,\n    });\n  };\n\n  closeHandler = () => {\n    window.location.reload();\n    // this.setState({\n    //   showPopup: false,\n    //   score: 0,\n    //   active: -1,\n    // });\n  };\n\n  nextCircle = () => {\n    if (this.state.rounds >= 5) {\n      this.stopGame();\n      return;\n    }\n    let nextActive;\n    do {\n      nextActive = this.getRndInteger(0, this.circles.length - 1);\n    } while (nextActive === this.state.active);\n\n    this.setState({\n      active: nextActive,\n      pace: this.state.pace * 0.95,\n      rounds: this.state.rounds + 1,\n    });\n\n    console.log(this.state.rounds);\n\n    this.timer = setTimeout(this.nextCircle, this.state.pace);\n  };\n\n  startGame = () => {\n    this.nextCircle();\n    this.setState({ gameOn: true });\n    BGsound.play();\n  };\n\n  stopGame = () => {\n    clearTimeout(this.timer);\n    this.setState({\n      showPopup: true,\n      gameOn: false,\n      rounds: 0,\n    });\n    BGsound.pause();\n    ENDsound.play();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Speedgame</h1>\n        <p>Your score: {this.state.score}</p>\n        <div className=\"circles\">\n          {this.circles.map((circle, i) => (\n            <Circle\n              key={i}\n              id={i}\n              click={() => this.clickedCircle(i)}\n              active={this.state.active === i}\n              disabled={this.state.gameOn}\n            />\n          ))}\n        </div>\n        {!this.state.gameOn && <Button click={this.startGame}>START</Button>}\n        {this.state.gameOn && <Button click={this.stopGame}>STOP</Button>}\n        {this.state.showPopup && (\n          <Popup close={this.closeHandler} score={this.state.score} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOMClient from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst container = document.getElementById(\"root\");\nconst root = ReactDOMClient.createRoot(container);\n\nroot.render(<App />);\n","module.exports = __webpack_public_path__ + \"static/media/bg.3ee1573f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/end.55f9d845.mp3\";"],"sourceRoot":""}